[
["index.html", "Resouce use in two sympatric species of sea snakes in anthropogenically dominated seascape 1 Introduction", " Resouce use in two sympatric species of sea snakes in anthropogenically dominated seascape Shawn Dsouza, Chetan Rao, Muralidharan M., and Kartik Shanker 2020-05-28 1 Introduction This file contains the code for analysis in R for a study about resources use in sea snakes on the west coast of India. The core message of this manuscripts are as follows: Resource use differs between H. curtus and H. schistosus Variation in fishing intensity of trawlers and gillnets affects patterns of resource use We used a combination of approaches including: fisheries dependent methods to characterise distribution and habitat use of the two species, and spatial overlap with fishing; visual gut content analysis to characterise diet and trophic niche of the species, and overlap between fisheries catch and sea snake diet; stable isotope analysis to characterise overall resource use in terms of isotopic niche, as well as the effect of fishing intensity on the niche width of both species. "],
["difference-in-distribution-and-habitat-use-between-h-curtus-and-h-shcistosus.html", "2 DIfference in distribution and habitat use between H. curtus and H. shcistosus 2.1 Mapping sea snake distribution with fisheries survey data 2.2 Summarising depth use by species 2.3 Spatial segregation by species 2.4 Modelling depth use by species", " 2 DIfference in distribution and habitat use between H. curtus and H. shcistosus 2.1 Mapping sea snake distribution with fisheries survey data #Calculating sea snake abundance snakes_den = snakes%&gt;% filter(Species == &quot;Hydrophis schistosus&quot; | Species == &quot;Hydrophis curtus&quot;, Fishing.Location != &quot;&quot;, !is.na(Depth.Caught..m.))%&gt;% dplyr::select(Species, Fishing.Location, Depth.Caught..m., Date, Boat.Name.Owner, No..of.Hauls, Average.Haul.Duration..Hours., Gear.Type)%&gt;% group_by(Gear.Type)%&gt;% mutate(n.hauls = ifelse(is.na(No..of.Hauls), median(No..of.Hauls, na.rm = T), No..of.Hauls), haul.time = ifelse(is.na(Average.Haul.Duration..Hours.), median(Average.Haul.Duration..Hours., na.rm = T), Average.Haul.Duration..Hours.))%&gt;% group_by(Date, Boat.Name.Owner)%&gt;% summarise(HC = sum(Species == &quot;Hydrophis curtus&quot;), HS = sum(Species == &quot;Hydrophis schistosus&quot;), effort = last(n.hauls*haul.time), Fishing.Location = last(Fishing.Location), Depth.Caught..m. = last(Depth.Caught..m.))%&gt;% gather(c(&quot;HC&quot;, &quot;HS&quot;), value = n, key = &quot;Species&quot;)%&gt;% mutate(CPUE = n/effort)%&gt;% drop_na() # sample size snakes%&gt;% filter(Species == &quot;Hydrophis schistosus&quot; | Species == &quot;Hydrophis curtus&quot;, Fishing.Location != &quot;&quot;, !is.na(Depth.Caught..m.))%&gt;% dplyr::select(Species, Fishing.Location, Depth.Caught..m., Date, Boat.Name.Owner, No..of.Hauls, Average.Haul.Duration..Hours., Gear.Type)%&gt;% group_by(Gear.Type)%&gt;% mutate(n.hauls = ifelse(is.na(No..of.Hauls), #completing vars with median median(No..of.Hauls, na.rm = T), No..of.Hauls), haul.time = ifelse(is.na(Average.Haul.Duration..Hours.), median(Average.Haul.Duration..Hours., na.rm = T), Average.Haul.Duration..Hours.))%&gt;% group_by(Gear.Type, Date, Boat.Name.Owner)%&gt;% summarise(HC = sum(Species == &quot;Hydrophis curtus&quot;), HS = sum(Species == &quot;Hydrophis schistosus&quot;), effort = last(n.hauls*haul.time), Fishing.Location = last(Fishing.Location), Depth.Caught..m. = last(Depth.Caught..m.))%&gt;% gather(c(&quot;HC&quot;, &quot;HS&quot;), value = n, key = &quot;Species&quot;)%&gt;% mutate(CPUE = n/effort)%&gt;% drop_na()%&gt;% group_by(Gear.Type)%&gt;% summarise(n = n(), effort = sum(effort)) Gear.Type n effort GillNet 396 541.12 Rampan 60 214.90 Trawler 40 185.50 snakes_den &lt;- read.csv(&quot;../Data/snakes-density.csv&quot;)#saved data set to reduce compute time ## Error in file(file, &quot;rt&quot;): cannot open the connection # plotting densities ## importing functions source(&quot;../Functions/intensity extract.R&quot;) ## Error in file(filename, &quot;r&quot;, encoding = encoding): cannot open the connection source(&quot;../Functions/raster to df.R&quot;) ## Error in file(filename, &quot;r&quot;, encoding = encoding): cannot open the connection source(&quot;../Functions/intensity_plot.R&quot;) ## Error in file(filename, &quot;r&quot;, encoding = encoding): cannot open the connection ## Calculating sea snake CPUE den &lt;- snakes_den%&gt;% group_by(Species)%&gt;% nest()%&gt;% mutate(m = map(data, ~map.extract(df = ., var = &quot;n&quot;, func = &#39;sum&#39;)), mdf = map(m, map.df))%&gt;% dplyr::select(mdf)%&gt;% unnest()%&gt;% spread(Species, layer) ## Error in eval(lhs, parent, parent): object &#39;snakes_den&#39; not found # Mean, sd CPUE den%&gt;% skimr::skim(HC, HS) ## Error in eval(lhs, parent, parent): object &#39;den&#39; not found #Spatial extent of species snakes_den%&gt;% group_by(Species)%&gt;% nest()%&gt;% mutate(m = map(data, ~map.extract(df = ., var = &quot;CPUE&quot;, func = &#39;sum&#39;)), mdf = map(m, map.df))%&gt;% dplyr::select(mdf)%&gt;% summarise(ext = map(mdf, ~sum(.$layer&gt;0)))%&gt;% unnest() ## Error in eval(lhs, parent, parent): object &#39;snakes_den&#39; not found #Plotting distribution library(marmap) library(ggmap) depth &lt;- readGEBCO.bathy(&quot;../Data/gebco_2019_n16.6_s15.6_w73.1_e73.9.nc&quot;) ## Error in R_nc4_open: No such file or directory ## Error in ncdf4::nc_open(file): Error in nc_open trying to open file ../Data/gebco_2019_n16.6_s15.6_w73.1_e73.9.nc depth = fortify.bathy(depth)%&gt;% dplyr::rename(lon = x, lat = y, depth = z)%&gt;% filter(depth &lt; 1) ## Error in as.xyz(x): object &#39;depth&#39; not found snake_plot &lt;- snakes_den%&gt;% mutate(Species = ifelse(Species == &quot;HC&quot;, &quot;Hydrophis curtus&quot;, &quot;Hydrophis schistosus&quot;))%&gt;% group_by(Species)%&gt;% nest()%&gt;% mutate(m = map(data, ~map.extract(df = ., var = &quot;CPUE&quot;, func = &#39;sum&#39;)), mdf = map(m, map.df), plot = map2(mdf, Species, ~int.plot(mdf = ., Species, name = &quot;CPUE&quot;)))%&gt;% gridExtra::grid.arrange(grobs = .$plot, ncol = 2) ## Error in eval(lhs, parent, parent): object &#39;snakes_den&#39; not found ggsave(snake_plot, filename = &quot;../Figures and Tables/figure1.tiff&quot;, width = 8, height = 4.5, dpi = 300) ## Error in grid.draw(plot): object &#39;snake_plot&#39; not found Why does the join reduce from 101 -&gt; 92 Why is H. curtus only found around and off Malvan? Do H. schistosus and H.curtus partition the coastal habitat along the depth axis? 2.2 Summarising depth use by species # Calculating mean depth in cell dep &lt;- depth%&gt;% nest()%&gt;% mutate(m = map(data, ~map.extract(df = ., var = &quot;depth&quot;, func = mean)), mdf = map(m, map.df))%&gt;% dplyr::select(mdf)%&gt;% unnest()%&gt;% rename(mean.depth = layer) ## Error in eval(lhs, parent, parent): object &#39;depth&#39; not found #Calculating relative abaundance of sea snakes in each cell fi_den&lt;- inner_join(fi, den, by = c(&quot;x&quot;, &quot;y&quot;))%&gt;% inner_join(dep, by = c(&quot;x&quot;, &quot;y&quot;))%&gt;% mutate(rel.prop = HC/(HC+HS)) ## Error in inner_join(fi, den, by = c(&quot;x&quot;, &quot;y&quot;)): object &#39;fi&#39; not found # Relative proportion of H. curtus with depth fi_den%&gt;% gather(c(&quot;HS&quot;, &quot;HC&quot;), key = sp, value = CPUE)%&gt;% filter(CPUE&gt;0)%&gt;% group_by(sp)%&gt;% skimr::skim(mean.depth)%&gt;% skimr::yank(&quot;numeric&quot;) ## Error in eval(lhs, parent, parent): object &#39;fi_den&#39; not found 2.3 Spatial segregation by species fi_den%&gt;% summarise(ttl.ext = sum(HC&gt;0 | HS&gt;0), ovrlp = sum(HC &gt; 0 &amp; HS &gt; 0), rel.ovlp = ovrlp/ttl.ext) ## Error in eval(lhs, parent, parent): object &#39;fi_den&#39; not found 2.4 Modelling depth use by species #t-test for cell depth fi_den%&gt;% gather(c(&quot;HS&quot;, &quot;HC&quot;), key = sp, value = CPUE)%&gt;% filter(CPUE&gt;0)%&gt;% dplyr::select(sp, mean.depth)%&gt;% nest()%&gt;% mutate(mod = map(data, ~t.test(mean.depth ~ sp, data = .)), sumry = map(mod, broom::tidy), d = map(data, ~lsr::cohensD(mean.depth ~ sp, data = .)))%&gt;% dplyr::select(sumry, d)%&gt;% unnest()%&gt;% dplyr::select(estimate:p.value, d) ## Error in eval(lhs, parent, parent): object &#39;fi_den&#39; not found #testing effect of cell depth on relative abundance fi_den%&gt;% gather(c(&quot;HS&quot;, &quot;HC&quot;), key = sp, value = CPUE)%&gt;% mutate(rel.prop = ifelse(sp == &quot;HS&quot;, 1 - rel.prop, rel.prop), mean.depth = -mean.depth)%&gt;% dplyr::select(sp, rel.prop, mean.depth)%&gt;% group_by(sp)%&gt;% nest()%&gt;% mutate(prop_dep = map(data, ~lm(rel.prop ~ mean.depth, data = .)), sumry = map(prop_dep, broom::tidy), stat = map(prop_dep, broom::glance))%&gt;% dplyr::select(sumry, stat)%&gt;% unnest()%&gt;% dplyr::select(sp:p.value, adj.r.squared) ## Error in eval(lhs, parent, parent): object &#39;fi_den&#39; not found After controling for effect of gear type with a mixed effect model. Depth caught still varies significantly with species. Hence, prefered habitat in terms of depth may vary bewtween H. curtus and H. schistosus # libraries library(tidyverse) #snakes data snakes &lt;- read.csv(&quot;../data/Sea-snakes_fish-dep_2018-19_070220.csv&quot;) ## Error in file(file, &quot;rt&quot;): cannot open the connection "],
["difference-in-diet-between-h-curtus-and-h-schsitosus.html", "3 DIfference in diet between H. curtus and H. schsitosus 3.1 No. of samples collected by sea snake species 3.2 Proportion of unidentified specimens 3.3 Diverisity of prey families found in gut content 3.4 List of sea snake prey species 3.5 Relative abundance of prey families in sea snake gut content 3.6 Diverisity of prey families found in gut content 3.7 Overlap in prey of H. curtus and H. schsitosus 3.8 Prey preference 3.9 Selectivity of prey sizes", " 3 DIfference in diet between H. curtus and H. schsitosus 3.1 No. of samples collected by sea snake species snakes%&gt;% filter(Species == &quot;Hydrophis curtus&quot; | Species == &quot;Hydrophis schistosus&quot;)%&gt;% group_by(Species)%&gt;% summarise(N = n(), n = sum((Gut.Content) == &quot;Yes&quot;), n_male = sum((Gut.Content) == &quot;Yes&quot; &amp; Sex == &quot;Male&quot;), n_female = sum((Gut.Content) == &quot;Yes&quot; &amp; Sex == &quot;Female&quot;), prop = N/793) Species N n n_male n_female prop Hydrophis curtus 179 36 18 18 0.2257251 Hydrophis schistosus 605 93 55 36 0.7629256 A very low proportion of inviduals had gut content present at the time of sampling. Sampling accross species and sexes may be adequate for comparison. 3.2 Proportion of unidentified specimens gc = read.csv(&quot;../Data/Sea_snakes_gut_content_2018-19.csv&quot;)%&gt;% filter(Source == &quot;Gut content&quot;) ## Error in file(file, &quot;rt&quot;): cannot open the connection gc%&gt;% filter(Source == &quot;Gut content&quot;)%&gt;% summarise(N_sp = length(unique(Prey.Species)), N_fam = length(unique(Prey.Family)), unid_sp = sum(Prey.Species == &quot;Unidentified&quot; | Prey.Species == &quot;&quot;, na.rm = T)/n(), unid_fam = sum(Prey.Family == &quot;Unidentified&quot; | Prey.Family == &quot;&quot;, na.rm = T)/n()) ## Error in UseMethod(&quot;filter_&quot;): no applicable method for &#39;filter_&#39; applied to an object of class &quot;function&quot; A large portion of gut content specimens were unidentifiable. This is an unavoidable consquence of VGCA. 3.3 Diverisity of prey families found in gut content library(vegetarian) #Creating data martix fam_vegan = gc%&gt;% filter(Source == &quot;Gut content&quot;)%&gt;% filter(Prey.Family != &quot;Unidentified&quot;)%&gt;% group_by(Snake.Species, Prey.Family)%&gt;% summarise(n = n())%&gt;% group_by(Snake.Species)%&gt;% mutate(t = sum(n))%&gt;% group_by(Snake.Species, Prey.Family)%&gt;% summarise(p = n/t)%&gt;% spread(Prey.Family, p, fill = 0)%&gt;% column_to_rownames(&quot;Snake.Species&quot;) ## Error in UseMethod(&quot;filter_&quot;): no applicable method for &#39;filter_&#39; applied to an object of class &quot;function&quot; #Richness gc%&gt;% filter(Snake.Species == &quot;Hydrophis schistosus&quot; | Snake.Species == &quot;Hydrophis curtus&quot;, Prey.Species != &quot;Unidentified&quot;)%&gt;% group_by(Snake.Species)%&gt;% summarise(Prey.Species.Richness = length(unique(Prey.Species))) ## Error in UseMethod(&quot;filter_&quot;): no applicable method for &#39;filter_&#39; applied to an object of class &quot;function&quot; #Alpha Diversity data.frame( hs = d(fam_vegan[-1,], &quot;alpha&quot;, boot = T), hc = d(fam_vegan[-2,], &quot;alpha&quot;, boot = T) ) ## Error in is.data.frame(abundances): object &#39;fam_vegan&#39; not found #Beta diverisity gc%&gt;% filter(Snake.Species == &quot;Hydrophis schistosus&quot; | Snake.Species == &quot;Hydrophis curtus&quot;, Prey.Species != &quot;Unidentified&quot;)%&gt;% group_by(Prey.Species)%&gt;% summarise(N_pred = length(unique(Snake.Species)))%&gt;% ungroup()%&gt;% summarise(Overlap = sum(N_pred&gt;1)) ## Error in UseMethod(&quot;filter_&quot;): no applicable method for &#39;filter_&#39; applied to an object of class &quot;function&quot; gc%&gt;% filter(Prey.Species != &quot;Unidentified&quot;)%&gt;% group_by(Snake.Species, Prey.Species)%&gt;% summarise(n = n())%&gt;% group_by(Snake.Species)%&gt;% mutate(N = sum(n))%&gt;% group_by(Snake.Species, Prey.Species)%&gt;% summarise(p = n/N)%&gt;% spread(Snake.Species, p, fill = 0)%&gt;% rename(&quot;HC&quot; = &#39;Hydrophis curtus&#39;, &quot;HS&quot; = &#39;Hydrophis schistosus&#39;)%&gt;% mutate(P = abs(HC - HS))%&gt;% summarise(D = 1 - 0.5*sum(P)) ## Error in UseMethod(&quot;filter_&quot;): no applicable method for &#39;filter_&#39; applied to an object of class &quot;function&quot; similarity(fam_vegan, q = 2, boot = T) ## Error in similarity(fam_vegan, q = 2, boot = T): object &#39;fam_vegan&#39; not found #Percentage of tetrodontids gc%&gt;% filter(Prey.Species != &quot;&quot;, Prey.Species != &quot;Unidentified&quot;, Prey.Family != &quot;&quot;, Prey.Family != &quot;Unidentified&quot;)%&gt;% filter(Snake.Species == &quot;Hydrophis schistosus&quot; | Snake.Species == &quot;Hydrophis curtus&quot;)%&gt;% group_by(Snake.Species)%&gt;% mutate(N = n())%&gt;% group_by(Snake.Species, Prey.Family, Prey.Species)%&gt;% summarise(N = last(N), Perc = n()*100/N)%&gt;% write.csv(file = &quot;../Data/prey list.csv&quot;) ## Error in UseMethod(&quot;filter_&quot;): no applicable method for &#39;filter_&#39; applied to an object of class &quot;function&quot; 3.4 List of sea snake prey species gc%&gt;% filter(Snake.Species != &quot;&quot;)%&gt;% group_by(Snake.Species, Prey.Family, Prey.Species)%&gt;% summarise(Percentage = n()) ## Error in UseMethod(&quot;filter_&quot;): no applicable method for &#39;filter_&#39; applied to an object of class &quot;function&quot; 3.5 Relative abundance of prey families in sea snake gut content gc%&gt;% filter(Snake.Species == &quot;Hydrophis schistosus&quot; | Snake.Species == &quot;Hydrophis curtus&quot;, Prey.Family != &quot;&quot;, Prey.Family != &quot;Unidentified&quot;)%&gt;% ggplot(aes(Prey.Family, fill = Snake.Species))+ geom_bar(aes(y = ..prop.., group = Snake.Species), stat = &quot;count&quot;, position = position_dodge(preserve = &quot;single&quot;), color = &quot;black&quot;)+ labs(x =&quot; Prey Family&quot;, y = &quot;Relative proportion&quot;)+ scale_y_continuous(expand = c(0,0), trans = )+ scale_fill_brewer(palette = &quot;Greys&quot;)+ theme_minimal()+ theme(legend.position = &quot;top&quot;, axis.text.x = element_text(angle = 45, hjust = 1), text = element_text(size = 20), legend.text = element_text(face = &quot;italic&quot;)) ## Error in UseMethod(&quot;filter_&quot;): no applicable method for &#39;filter_&#39; applied to an object of class &quot;function&quot; 3.6 Diverisity of prey families found in gut content library(vegetarian) library(vegan) #Creating data martix fam_vegan = gc%&gt;% filter(Prey.Family != &quot;Unidentified&quot;)%&gt;% group_by(Snake.Species, Prey.Family)%&gt;% summarise(n = n())%&gt;% spread(Prey.Family, n, fill = 0)%&gt;% column_to_rownames(&quot;Snake.Species&quot;) ## Error in UseMethod(&quot;filter_&quot;): no applicable method for &#39;filter_&#39; applied to an object of class &quot;function&quot; #Richness gc%&gt;% filter(Snake.Species == &quot;Hydrophis schistosus&quot; | Snake.Species == &quot;Hydrophis curtus&quot;, Prey.Family != &quot;Unidentified&quot;)%&gt;% group_by(Snake.Species)%&gt;% summarise(Prey.Family.Richness = length(unique(Prey.Family))) ## Error in UseMethod(&quot;filter_&quot;): no applicable method for &#39;filter_&#39; applied to an object of class &quot;function&quot; #Alpha Diversity data.frame( hs = d(fam_vegan[-1,], &quot;alpha&quot;, boot = T), hc = d(fam_vegan[-2,], &quot;alpha&quot;, boot = T) ) ## Error in is.data.frame(abundances): object &#39;fam_vegan&#39; not found renyi(fam_vegan, hill = T, scales = c(0,1,2)) ## Error in as.matrix(x): object &#39;fam_vegan&#39; not found library(hilldiv) # splitting data by gut samples fam_hilldiv &lt;- gc%&gt;% filter(Prey.Family != &quot;Unidentified&quot;, Prey.Family !=&quot;&quot;, Field.Code != &quot;&quot;)%&gt;% group_by(Field.Code, Prey.Family)%&gt;% summarise(n = n())%&gt;% spread(Field.Code, n, fill = 0)%&gt;% ungroup()%&gt;% column_to_rownames(&quot;Prey.Family&quot;) ## Error in UseMethod(&quot;filter_&quot;): no applicable method for &#39;filter_&#39; applied to an object of class &quot;function&quot; fam_hilldiv &lt;- as.data.frame(fam_hilldiv) ## Error in as.data.frame(fam_hilldiv): object &#39;fam_hilldiv&#39; not found # sample ids and species gc_samples &lt;- gc%&gt;% filter(Prey.Family != &quot;Unidentified&quot;, Prey.Family !=&quot;&quot;, Field.Code != &quot;&quot;)%&gt;% dplyr::select(Field.Code, Snake.Species)%&gt;% distinct()%&gt;% rename(Sample = Field.Code, Species = Snake.Species) ## Error in UseMethod(&quot;filter_&quot;): no applicable method for &#39;filter_&#39; applied to an object of class &quot;function&quot; # testing difference between species #div_test(countable = tss(fam_hilldiv), hierarchy = gc_samples, qvalue = 1) 3.7 Overlap in prey of H. curtus and H. schsitosus #Beta diverisity gc%&gt;% filter(Snake.Species == &quot;Hydrophis schistosus&quot; | Snake.Species == &quot;Hydrophis curtus&quot;, Prey.Family != &quot;Unidentified&quot;)%&gt;% group_by(Prey.Family)%&gt;% summarise(N_pred = length(unique(Snake.Species)))%&gt;% ungroup()%&gt;% summarise(Overlap = sum(N_pred&gt;1)) ## Error in UseMethod(&quot;filter_&quot;): no applicable method for &#39;filter_&#39; applied to an object of class &quot;function&quot; similarity(fam_vegan, q = 2, boot = T) ## Error in similarity(fam_vegan, q = 2, boot = T): object &#39;fam_vegan&#39; not found library(vegan) fam_simboo &lt;- gc%&gt;% filter(Prey.Family != &quot;Unidentified&quot;, Prey.Family !=&quot;&quot;, Field.Code != &quot;&quot;)%&gt;% group_by(Snake.Species, Field.Code, Prey.Family)%&gt;% summarise(n = n())%&gt;% spread(Prey.Family, n, fill = 0)%&gt;% ungroup() ## Error in UseMethod(&quot;filter_&quot;): no applicable method for &#39;filter_&#39; applied to an object of class &quot;function&quot; set.seed(2) permanova_sp &lt;- adonis2(fam_simboo[,3:length(fam_simboo)] ~ fam_simboo$Snake.Species, data = fam_simboo[,1]) ## Error in eval(YVAR, environment(formula), globalenv()): object &#39;fam_simboo&#39; not found broom::tidy(permanova_sp) ## Error in broom::tidy(permanova_sp): object &#39;permanova_sp&#39; not found 3.8 Prey preference #Percentage of tetrodontids IRI &lt;- gc%&gt;% filter(Prey.Family != &quot;&quot;)%&gt;% filter(Snake.Species == &quot;Hydrophis schistosus&quot; | Snake.Species == &quot;Hydrophis curtus&quot;)%&gt;% group_by(Snake.Species)%&gt;% mutate(Fr = length(unique(Field.Code)), # total number of snakes sampled W = sum(Weight..g., na.rm = T), # total weight of prey sampled N = n())%&gt;% # total number of prey sampled group_by(Snake.Species, Prey.Family)%&gt;% summarise(f = length(unique(Field.Code)), # number snakes in which prey family occured Fr = last(Fr), w = sum(Weight..g., na.rm = T), # weight of prey family W = last(W), n = n(), # number of individuals of prey family N = last(N))%&gt;% group_by(Snake.Species, Prey.Family)%&gt;% summarise(per.F = f*100/Fr, per.W = w*100/W, per.N = n*100/N, IRI = (per.N + per.W)*per.F)%&gt;% group_by(Snake.Species)%&gt;% arrange(desc(IRI))%&gt;% mutate(rank = 1:n()) ## Error in UseMethod(&quot;filter_&quot;): no applicable method for &#39;filter_&#39; applied to an object of class &quot;function&quot; knitr::kable(IRI) ## Error in knitr::kable(IRI): object &#39;IRI&#39; not found IRI%&gt;% ggplot(aes(Prey.Family, IRI, fill = Snake.Species))+ geom_col(col = &quot;black&quot;, position = position_dodge(preserve = &quot;single&quot;))+ scale_y_sqrt(name = &quot;IRI (sq.rt.)&quot;)+ scale_fill_brewer(palette = &quot;Greys&quot;)+ theme(axis.text.x = element_text(hjust = 1, angle = 60), legend.text = element_text(face = &quot;italic&quot;)) ## Error in eval(lhs, parent, parent): object &#39;IRI&#39; not found 3.9 Selectivity of prey sizes # summary gc%&gt;% filter(Snake.Species == &quot;Hydrophis schistosus&quot; | Snake.Species == &quot;Hydrophis curtus&quot;, Condition &lt; 2)%&gt;% group_by(Snake.Species)%&gt;% skimr::skim(Maximum.Body.Girth..cm.)%&gt;% skimr::yank(&quot;numeric&quot;)%&gt;% dplyr::select(Snake.Species:p100) ## Error in UseMethod(&quot;filter_&quot;): no applicable method for &#39;filter_&#39; applied to an object of class &quot;function&quot; # testing diff max prey width by species gc%&gt;% filter(Snake.Species == &quot;Hydrophis schistosus&quot; | Snake.Species == &quot;Hydrophis curtus&quot;, Condition &lt; 3, !is.na(Maximum.Body.Girth..cm.))%&gt;% dplyr::select(Snake.Species, Maximum.Body.Girth..cm.)%&gt;% droplevels()%&gt;% nest()%&gt;% mutate(test = map(data, ~t.test(Maximum.Body.Girth..cm. ~ Snake.Species, data = .)), sumry = map(test, broom::tidy), d = map(data, ~lsr::cohensD(Maximum.Body.Girth..cm. ~ Snake.Species, data = .)))%&gt;% dplyr::select(sumry, d)%&gt;% unnest()%&gt;% dplyr::select(estimate:p.value, d) ## Error in UseMethod(&quot;filter_&quot;): no applicable method for &#39;filter_&#39; applied to an object of class &quot;function&quot; "],
["difference-in-resouce-use-betweek-h-curtus-and-h-schistosus.html", "4 Difference in resouce use betweek H. curtus and H. schistosus? 4.1 Number of samples analysed 4.2 Summary statistics on Carbon and Nitrogen stable isotopes 4.3 Difference in niche width between sea snakes 4.4 Visualising posterior ellipses to compare species isotopic niche 4.5 Relative overlap in bayesian standard ellipses", " 4 Difference in resouce use betweek H. curtus and H. schistosus? Carbon and Nitrogen isotope ratios were compared accorss species. Plasma and scale samples were used to compare short term and long term resource use respectively. Multiples metrics including niche width (SEA), variance (range), overlap (%) were used. #Stable isotope data sia = read.csv(&quot;../Data/Stable Isotope Data_CEAS_241119.csv&quot;) ## Error in file(file, &quot;rt&quot;): cannot open the connection #joining sia data to snake data sia_snakes = sia%&gt;% filter(Tissue.type != &quot;Gut Content&quot;)%&gt;% left_join(snakes, &#39;Field.Code&#39;)%&gt;% mutate(Lab = &quot;CEAS&quot;)%&gt;% dplyr::rename(Delta.Carbon = d13C..vpdb. , Delta.Nitrogen = d15N..N2.air.)%&gt;% dplyr::select(Date, Field.Code, Species, Snout.to.Vent..cm., Sex, Gravid, Class, Gear.Type, Fishing.Location, Depth.Caught..m., Plasma.Color, Delta.Carbon, Delta.Nitrogen, Lab, Tissue.type, Month, Year) ## Error in eval(lhs, parent, parent): object &#39;sia&#39; not found #labels D.C =expression({delta}^13*C~&#39;\\u2030&#39;) D.N =expression({delta}^15*N~&#39;\\u2030&#39;) 4.1 Number of samples analysed sia_snakes%&gt;% filter(Tissue.type == &quot;Plasma&quot; | Tissue.type == &quot;Scales&quot;)%&gt;% filter(Species == &quot;Hydrophis curtus&quot; | Species == &quot;Hydrophis schistosus&quot;)%&gt;% group_by(Species, Tissue.type)%&gt;% count()%&gt;% spread(Tissue.type, n) ## Error in eval(lhs, parent, parent): object &#39;sia_snakes&#39; not found 4.2 Summary statistics on Carbon and Nitrogen stable isotopes sia_snakes%&gt;% filter(Tissue.type == &quot;Plasma&quot; | Tissue.type == &quot;Scales&quot;)%&gt;% filter(Species == &quot;Hydrophis curtus&quot; | Species == &quot;Hydrophis schistosus&quot;)%&gt;% gather(c(&quot;Delta.Carbon&quot;, &quot;Delta.Nitrogen&quot;), key = &quot;Isotope&quot;, value = &quot;value&quot;)%&gt;% group_by(Species, Tissue.type, Isotope)%&gt;% summarise(Mean = round(mean(value, na.rm = T), 2), sd = round(sd(value, na.rm = T), 2), n = sum(!is.na(value)))%&gt;% unite(&quot;Mean.sd&quot;, Mean:sd, sep = &quot;±&quot;)%&gt;% dplyr::select(-n)%&gt;% spread(Isotope, Mean.sd) ## Error in eval(lhs, parent, parent): object &#39;sia_snakes&#39; not found 4.3 Difference in niche width between sea snakes library(SIBER) #Creating siber data siber_snakes = sia_snakes%&gt;% filter()%&gt;% dplyr::select(Delta.Carbon, Delta.Nitrogen, Tissue.type, Species)%&gt;% dplyr::rename(iso1 = Delta.Carbon, iso2 = Delta.Nitrogen, group = Tissue.type, community = Species)%&gt;% filter(!is.na(group), !is.na(iso1), !is.na(iso2), community == &quot;Hydrophis schistosus&quot; | community == &quot;Hydrophis curtus&quot;)%&gt;% droplevels() ## Error in eval(lhs, parent, parent): object &#39;sia_snakes&#39; not found siber.snakes = createSiberObject(siber_snakes) ## Error in createSiberObject(siber_snakes): object &#39;siber_snakes&#39; not found 4.3.1 Maximum likelihood estimate of SEA SEA.ML_snakes &lt;- groupMetricsML(siber.snakes) #maximum likelihood estimates ## Error in groupMetricsML(siber.snakes): object &#39;siber.snakes&#39; not found data.frame(t(SEA.ML_snakes)) ## Error in t(SEA.ML_snakes): object &#39;SEA.ML_snakes&#39; not found As maximum likelihood can only porivde point estimates of SEA, a bayesian model was used to provide more robust comparison of niche width. 4.3.2 Bayesian estimate of SEA # options for running jags parms &lt;- list() parms$n.iter &lt;- 2 * 10^4 # number of iterations to run the model for parms$n.burnin &lt;- 1 * 10^3 # discard the first set of values parms$n.thin &lt;- 10 # thin the posterior by this many parms$n.chains &lt;- 2 # run this many chains # define the priors priors &lt;- list() priors$R &lt;- 1 * diag(2) priors$k &lt;- 2 priors$tau.mu &lt;- 1.0E-3 snakes.post &lt;- siberMVN(siber.snakes, parms, priors)#fitting multivariate normal model and getting posteriors ## Error in siberMVN(siber.snakes, parms, priors): object &#39;siber.snakes&#39; not found SEA.B_snakes &lt;- siberEllipses(snakes.post)#estimating standard ellipse area from posteriors ## Error in nrow(corrected.posteriors[[1]]): object &#39;snakes.post&#39; not found means.B_snakes &lt;- extractPosteriorMeans(siber.snakes, snakes.post)#mean isotope values ## Error in paste(siber$original.data[, &quot;community&quot;], siber$original.data[, : object &#39;siber.snakes&#39; not found ccc &lt;- names(snakes.post) ## Error in eval(expr, envir, enclos): object &#39;snakes.post&#39; not found colnames(SEA.B_snakes) &lt;- ccc ## Error in eval(expr, envir, enclos): object &#39;ccc&#39; not found SEA.B_snakesdf = data.frame(SEA.B_snakes, check.names = F)%&gt;% rowid_to_column(var = &quot;run&quot;)%&gt;% gather(Species.Tissue, SEA.B, -run)%&gt;% separate(Species.Tissue, c(&quot;Species&quot;,&quot;Tissue&quot;), sep = &quot;([\\\\.\\\\?\\\\:])&quot;) ## Error in data.frame(SEA.B_snakes, check.names = F): object &#39;SEA.B_snakes&#39; not found #Summarising SEA estimates SEA.B_snakesdf%&gt;% group_by(Species, Tissue)%&gt;% summarise(SEA.mean = mean(SEA.B), SEA.sd = sd(SEA.B), SEA.se = sd(SEA.B)/sqrt(n())) ## Error in eval(lhs, parent, parent): object &#39;SEA.B_snakesdf&#39; not found 4.3.3 Testing difference in species niche area by tissue type SEA.B_snakesdf%&gt;% spread(key = Species, value = SEA.B)%&gt;% group_by(Tissue)%&gt;% summarise(p = sum(`Hydrophis schistosus` &gt; `Hydrophis curtus`)/n()) ## Error in eval(lhs, parent, parent): object &#39;SEA.B_snakesdf&#39; not found Hyp: H. schistosus SEA is larger than H. curtus While niche width is slightly larger in H. schistosus, it is not significantly different. The posterior distribution of SEA^b has right skewed long tail (masked by the limits of the graph for visual clarity) possibly due to the low sample size. Niche width doesn’t seem to change accross different tissue types either, indicating stability over variying periods of assimilation. 4.4 Visualising posterior ellipses to compare species isotopic niche # how many of the posterior draws do you want? n.posts &lt;- 10 # decide how big an ellipse you want to draw p.ell &lt;- pchisq(1,2) set.seed(1) # a list to store the results snake_ellipses &lt;- list() # loop over groups for (i in 1:length(snakes.post)#sgenerating list with length groups*communities ){ # a dummy variable to build in the loop ell &lt;- NULL post.id &lt;- NULL for ( j in sample(1:4000, n.posts)){#randomlu extracting parameters for n samples from posterior distribution # covariance matrix Sigma &lt;- matrix(snakes.post[[i]][j,1:4], 2, 2) # mean mu &lt;- snakes.post[[i]][j,5:6] # ellipse points out &lt;- ellipse::ellipse(Sigma, centre = mu , level = p.ell) ell &lt;- rbind(ell, out) #ellipse points from current loop post.id &lt;- c(post.id, rep(j, nrow(out))) #adding loop number (rep) } ell &lt;- as.data.frame(ell) # data frame of ellipse points from all draws ell$rep &lt;- post.id #adding draw id snake_ellipses[[i]] &lt;- ell #creading list of draws from each community.group } ## Error in eval(expr, envir, enclos): object &#39;snakes.post&#39; not found snake.ellipses &lt;- bind_rows(snake_ellipses, .id = &quot;id&quot;)#creating a data frame of post ellipse draws # now we need the group and community names # extract them from the ellipses.posterior list group_comm_names &lt;- names(snakes.post)[as.numeric(snake.ellipses$id)]#extractin communit.group from posteriors ## Error in eval(expr, envir, enclos): object &#39;snakes.post&#39; not found # split them and conver to a matrix, NB byrow = T split_group_comm &lt;- matrix(unlist(strsplit(group_comm_names, &quot;[.]&quot;)), nrow(snake.ellipses), 2, byrow = TRUE)#splitting communit and group ## Error in strsplit(group_comm_names, &quot;[.]&quot;): object &#39;group_comm_names&#39; not found snake.ellipses$community &lt;- split_group_comm[,1] ## Error in eval(expr, envir, enclos): object &#39;split_group_comm&#39; not found snake.ellipses$group &lt;- split_group_comm[,2] ## Error in eval(expr, envir, enclos): object &#39;split_group_comm&#39; not found snake.ellipses &lt;- dplyr::rename(snake.ellipses, iso1 = x, iso2 = y, Species = community, Tissue = group) ## Error: Can&#39;t rename columns that don&#39;t exist. ## [31mx[39m Column `x` doesn&#39;t exist. #Plotting 10 randomly sampled ellipses siber_snakes%&gt;% rename(Species = community, Tissue = group)%&gt;% ggplot(aes(iso1, iso2, col = Species))+ geom_point(aes(shape = Species), size = 2)+ ylab(expression(paste(delta^{15}, &quot;N (\\u2030)&quot;)))+ xlab(expression(paste(delta^{13}, &quot;C (\\u2030)&quot;)))+ geom_polygon(data = snake.ellipses, mapping = aes(iso1, iso2, group = rep, linetype = Species, col = Species), fill = NA)+ scale_color_brewer(palette = &quot;Set1&quot;, direction = -1)+ scale_fill_brewer(palette = &quot;Set1&quot;, direction = -1)+ facet_wrap(~Tissue)+ theme(legend.text = element_text(face = &quot;italic&quot;)) ## Error in eval(lhs, parent, parent): object &#39;siber_snakes&#39; not found ggsave(last_plot(), filename = &quot;../Figures and Tables/figure3.tiff&quot;, height = 4.5, width = 8) As seen in the SEA estimation, low sample size for H. curtus causes greater uncertainty in the estimation of standar ellipses even with bayesian inference. Both carbon and nitrogen isotpes seem to be enriched in scales when compared to plasma. Degree of overlap appears to be low for both tissues. Samples sizes for H. curtus in both tissues need to be increased despite using bayesian methods Unusual outlier in H. schistosus scales data needs to be checked 4.5 Relative overlap in bayesian standard ellipses #Overlap in ellipse based on plasma samples snake.p.overlap &lt;- bayesianOverlap(ellipse1 = &quot;Hydrophis schistosus.Plasma&quot; , #Group 1 ellipse2 = &quot;Hydrophis curtus.Plasma&quot;, #Group 2 snakes.post, #list with posteriour dists draws = 100, p.interval = 0.95, n = 100) #params ## Error in matrix(ellipses.posterior[[ellipse1]][i, 1:4], nrow = 2, ncol = 2): object &#39;snakes.post&#39; not found snake.p.overlap &lt;- snake.p.overlap%&gt;% mutate(Turnover = &quot;Short-term&quot;) ## Error in eval(lhs, parent, parent): object &#39;snake.p.overlap&#39; not found #overlap in ellipse based on scale samples snake.s.overlap &lt;- bayesianOverlap(ellipse1 = &quot;Hydrophis schistosus.Scales&quot; , #Group 1 ellipse2 = &quot;Hydrophis curtus.Scales&quot;, #Group 2 snakes.post, #list with posteriour dists draws = 100, p.interval = 0.95, n = 100) #params ## Error in matrix(ellipses.posterior[[ellipse1]][i, 1:4], nrow = 2, ncol = 2): object &#39;snakes.post&#39; not found snake.s.overlap &lt;- snake.s.overlap%&gt;% mutate(Turnover = &quot;Long-term&quot;) ## Error in eval(lhs, parent, parent): object &#39;snake.s.overlap&#39; not found snake.overlap &lt;- bind_rows(snake.p.overlap, snake.s.overlap) ## Error in dots_values(...): object &#39;snake.p.overlap&#39; not found snake.overlap%&gt;% mutate(prop.overlap = overlap/(area1 + area2 - overlap))%&gt;% #relative overlap ggplot(aes(prop.overlap))+ geom_histogram(bins = 10, col = &quot;black&quot;)+ #geom_vline(aes(xintercept = mean(prop.overlap), col = &quot;red&quot;), size = 1)+ labs(x = &quot;Proportion of overlap&quot;, y = &quot;Number of samples&quot;)+ scale_color_discrete(name = &quot;Mean&quot;)+ facet_wrap(~Turnover) ## Error in eval(lhs, parent, parent): object &#39;snake.overlap&#39; not found snake.overlap%&gt;% group_by(Turnover)%&gt;% mutate(prop.overlap = overlap/(area1 + area2 - overlap))%&gt;% summarise(Avg.overlap = mean(prop.overlap), sd = sd(prop.overlap)) ## Error in eval(lhs, parent, parent): object &#39;snake.overlap&#39; not found Overlap between H. curtus and H. schistosus seems to be high in when comparing long term resource use, i.e., scales. However, overlap between H. curtus and H. schistosus seems to be very low when comparing short term resource use, i.e., plasma. This difference could be caused by: low sample size for H. curtus differences in processing of scales and plasma, i.e., lipid extraction # importing libraries library(tidyverse) library(lubridate) library(viridis) "],
["varition-in-fishing-intensity-along-the-sindhudurg-coast.html", "5 Varition in fishing intensity along the sindhudurg coast 5.1 Calculating effort with depth 5.2 Mapping fishing intensity", " 5 Varition in fishing intensity along the sindhudurg coast #importing effort data effort = read.csv(&quot;../Data/Fishing-Effort_111219.csv&quot;)%&gt;% group_by(Date, Gear.Type)%&gt;% distinct(Boat.name, .keep_all = T)%&gt;%# fixing repetitions in effort data mutate(Month = factor(months(dmy(Date)), levels = month.name), Year = year(dmy(Date)))%&gt;% filter(Gear.Type == &quot;Trawler&quot; | Gear.Type == &quot;GillNet&quot;)# removing beach seines and purse seines ## Error in file(file, &quot;rt&quot;): cannot open the connection 5.1 Calculating effort with depth Fishing intensity: Vessel effort (Number of days fishing x No. of hauls x Average time per haul) is calculated for each boat on each day. This is then totaled for the sampling duration at each site. Should fishing intensity be analysed seperately by fishing gear. Should calculation of fishing intensity factor in Gears. dep_int = effort%&gt;% filter(Fishing.Location != &quot;&quot;)%&gt;% #removing missing location data dplyr::select(Date, Gear.Type, Fishing.Location, Boat.name, No..of.Hauls, Average.Haul.Time..Hours., No..of.Days.fishing, Depth..wav.)%&gt;% group_by(Gear.Type)%&gt;% mutate(n.days = ifelse(is.na(No..of.Days.fishing), #filling in missing data with means median(No..of.Days.fishing, na.rm = T), No..of.Days.fishing), n.hauls = ifelse(is.na(No..of.Hauls), mean(No..of.Hauls, na.rm = T), No..of.Hauls), haul.time = ifelse(is.na(Average.Haul.Time..Hours.), mean(Average.Haul.Time..Hours., na.rm = T), Average.Haul.Time..Hours.))%&gt;% ungroup()%&gt;% mutate(effort = (n.days)*(n.hauls)*(haul.time), Depth.m = Depth..wav.*1.87)%&gt;% dplyr::select(Date, Boat.name, Gear.Type, Fishing.Location, Depth.m, effort)%&gt;% drop_na() dep_int = read.csv(&quot;../Data/Fishing intensity_dep.csv&quot;) ## Error in file(file, &quot;rt&quot;): cannot open the connection knitr::kable(table(dep_int$Gear.Type))#sample size ## Error in table(dep_int$Gear.Type): object &#39;dep_int&#39; not found # effort per boat dep_int%&gt;% group_by(Gear.Type)%&gt;% skimr::skim(effort)%&gt;% skimr::yank(&quot;numeric&quot;) ## Error in eval(lhs, parent, parent): object &#39;dep_int&#39; not found # testing difference in effort by gears broom::tidy(t.test(effort ~ Gear.Type, data = dep_int))%&gt;% dplyr::select(estimate:p.value) ## Error in eval(m$data, parent.frame()): object &#39;dep_int&#39; not found lsr::cohensD(effort ~ Gear.Type, data = dep_int) # effect size ## Error in is(data, &quot;data.frame&quot;): object &#39;dep_int&#39; not found 5.2 Mapping fishing intensity How do we use location and depth data gathered from fisher surveys to map fishing intensity? Nearest landmarks are geocoded from google maps API Latitude is extracted from landmark geocode Match landmark latitude and depth from survey to GEBCO data Extract final longitude from GEBCO data library(sp) library(rgdal) library(raster) library(ggmap) dep_int = read.csv(&quot;../Data/Fishing intensity_dep.csv&quot;) ## Error in file(file, &quot;rt&quot;): cannot open the connection ext &lt;- raster(&quot;../Data/sampling_extent.tif&quot;) ## Error in .local(.Object, ...) : ## Error in .rasterObjectFromFile(x, band = band, objecttype = &quot;RasterLayer&quot;, : Cannot create a RasterLayer object from this file. (file does not exist) #importing functions source(&quot;../Functions/intensity extract.R&quot;) ## Error in file(filename, &quot;r&quot;, encoding = encoding): cannot open the connection source(&quot;../Functions/raster to df.R&quot;) ## Error in file(filename, &quot;r&quot;, encoding = encoding): cannot open the connection source(&quot;../Functions/intensity_plot.R&quot;) ## Error in file(filename, &quot;r&quot;, encoding = encoding): cannot open the connection #Calculating fishing intensity fi &lt;- dep_int%&gt;% group_by(Gear.Type)%&gt;% nest()%&gt;% mutate(m = map(data, ~map.extract(df = ., var = &quot;effort&quot;, func = &#39;sum&#39;)), mdf = map(m, map.df))%&gt;% dplyr::select(mdf)%&gt;% unnest()%&gt;% spread(Gear.Type, layer) ## Error in eval(lhs, parent, parent): object &#39;dep_int&#39; not found # Plotting intensity of fishing by gear type base &lt;- get_googlemap(center = c(mean(dep_int$lon),mean(dep_int$lat)), zoom = 10, scale = 2, maptype = &quot;terrain&quot;)##Getting basemap ## Error in mean(dep_int$lon): object &#39;dep_int&#39; not found #importing bathymetric data downloaded from GEBCO database library(marmap) depth &lt;- readGEBCO.bathy(&quot;../Data/gebco_2019_n16.6_s15.6_w73.1_e73.9.nc&quot;) ## Error in R_nc4_open: No such file or directory ## Error in ncdf4::nc_open(file): Error in nc_open trying to open file ../Data/gebco_2019_n16.6_s15.6_w73.1_e73.9.nc depth = fortify.bathy(depth)%&gt;% dplyr::rename(lon = x, lat = y, depth = z)%&gt;% filter(depth &lt; 1) ## Error in as.xyz(x): object &#39;depth&#39; not found boat_plot &lt;- dep_int%&gt;% group_by(Gear.Type)%&gt;% nest()%&gt;% mutate(m = map(data, ~map.extract(df = ., var = &quot;effort&quot;, func = &#39;sum&#39;)), mdf = map(m, map.df), plot = map2(mdf, Gear.Type, ~int.plot(mdf = ., Gear.Type, name = &quot;Fishing intensity&quot;)))%&gt;% gridExtra::grid.arrange(grobs = .$plot, ncol = 2) ## Error in eval(lhs, parent, parent): object &#39;dep_int&#39; not found ggsave(boat_plot, filename = &quot;../Figures and Tables/figure4.tiff&quot;, width = 8, height = 4.5, dpi = 300) ## Error in grid.draw(plot): object &#39;boat_plot&#39; not found Are points accurately depicted? Survey based map of fishing intensity needs to be verified with onboard observations and/or remote GPS data. #Spatial extent of gear types dep_int%&gt;% group_by(Gear.Type)%&gt;% nest()%&gt;% mutate(m = map(data, ~map.extract(df = ., var = &quot;effort&quot;, func = &#39;sum&#39;)), mdf = map(m, map.df))%&gt;% dplyr::select(mdf)%&gt;% summarise(ext = map(mdf, ~sum(.$layer&gt;0)))%&gt;% unnest() ## Error in eval(lhs, parent, parent): object &#39;dep_int&#39; not found "],
["does-fishing-intensity-affect-the-distribution-of-h-curtus-and-h-schistosus.html", "6 Does fishing intensity affect the distribution of H. curtus and H. schistosus? 6.1 Spatial overlap between fisheries and sea snakes 6.2 Variation in relative proportion of HC with fishing intensity", " 6 Does fishing intensity affect the distribution of H. curtus and H. schistosus? dep_int &lt;- read.csv(&quot;../data/Fishing intensity_dep.csv&quot;) ## Error in file(file, &quot;rt&quot;): cannot open the connection depth &lt;- read.csv(&quot;../data/sindhudurg depth.csv&quot;) ## Error in file(file, &quot;rt&quot;): cannot open the connection snakes_den &lt;- read.csv(&quot;../data/snakes-density.csv&quot;) ## Error in file(file, &quot;rt&quot;): cannot open the connection library(sp) library(raster) ext &lt;- raster::raster(&quot;../Data/sampling_extent.tif&quot;) ## Error in .local(.Object, ...) : ## Error in .rasterObjectFromFile(x, band = band, objecttype = &quot;RasterLayer&quot;, : Cannot create a RasterLayer object from this file. (file does not exist) source(&quot;../Functions/intensity extract.R&quot;) ## Error in file(filename, &quot;r&quot;, encoding = encoding): cannot open the connection source(&quot;../Functions/raster to df.R&quot;) ## Error in file(filename, &quot;r&quot;, encoding = encoding): cannot open the connection #Calculating fishing intensity fi &lt;- dep_int%&gt;% group_by(Gear.Type)%&gt;% nest()%&gt;% mutate(m = map(data, ~map.extract(df = ., var = &quot;effort&quot;, func = &#39;sum&#39;)), mdf = map(m, map.df))%&gt;% dplyr::select(mdf)%&gt;% unnest()%&gt;% spread(Gear.Type, layer) ## Error in eval(lhs, parent, parent): object &#39;dep_int&#39; not found #rename(intensity = layer) # Calculating sea snake CPUE den &lt;- snakes_den%&gt;% group_by(Species)%&gt;% nest()%&gt;% mutate(m = map(data, ~map.extract(df = ., var = &quot;n&quot;, func = &#39;sum&#39;)), mdf = map(m, map.df))%&gt;% dplyr::select(mdf)%&gt;% unnest()%&gt;% spread(Species, layer) ## Error in eval(lhs, parent, parent): object &#39;snakes_den&#39; not found # Calculating mean depth in cell dep &lt;- depth%&gt;% nest()%&gt;% mutate(m = map(data, ~map.extract(df = ., var = &quot;depth&quot;, func = mean)), mdf = map(m, map.df))%&gt;% dplyr::select(mdf)%&gt;% unnest()%&gt;% rename(mean.depth = layer) ## Error in eval(lhs, parent, parent): object &#39;depth&#39; not found #Calculating relative abaundance of sea snakes fi_den&lt;- inner_join(fi, den, by = c(&quot;x&quot;, &quot;y&quot;))%&gt;% inner_join(dep, by = c(&quot;x&quot;, &quot;y&quot;))%&gt;% mutate(rel.prop = HC/(HC+HS)) ## Error in inner_join(fi, den, by = c(&quot;x&quot;, &quot;y&quot;)): object &#39;fi&#39; not found 6.1 Spatial overlap between fisheries and sea snakes sp.ovlp &lt;- fi_den%&gt;% gather(c(&quot;HS&quot;, &quot;HC&quot;), key = sp, value = CPUE)%&gt;% gather(c(&quot;GillNet&quot;, &quot;Trawler&quot;), key = gear, value = intensity)%&gt;% group_by(gear, sp)%&gt;% summarise(overlap = sum(CPUE &gt; 0 &amp; intensity &gt; 0), extent.sp = sum(CPUE&gt;0), rel.ovlp = overlap/extent.sp) ## Error in eval(lhs, parent, parent): object &#39;fi_den&#39; not found knitr::kable(sp.ovlp) ## Error in knitr::kable(sp.ovlp): object &#39;sp.ovlp&#39; not found sp.ovlp%&gt;% group_by(sp)%&gt;% nest()%&gt;% mutate(ptest = map(data, ~prop.test(.$overlap, .$extent.sp)), sumry = map(ptest, broom::tidy), h = map(sumry, ~pwr::ES.h(.$estimate2, .$estimate1)))%&gt;% select(sumry, h)%&gt;% unnest()%&gt;% dplyr::select(sp:p.value, h) ## Error in eval(lhs, parent, parent): object &#39;sp.ovlp&#39; not found 6.2 Variation in relative proportion of HC with fishing intensity int_dist &lt;- lm(rel.prop ~ GillNet + Trawler + mean.depth, data = fi_den) ## Error in is.data.frame(data): object &#39;fi_den&#39; not found tidy(int_dist) ## Error in tidy(int_dist): could not find function &quot;tidy&quot; glance(int_dist)%&gt;% dplyr::select(adj.r.squared, AIC) ## Error in glance(int_dist): could not find function &quot;glance&quot; car::Anova(int_dist) ## Error in car::Anova(int_dist): object &#39;int_dist&#39; not found fi_den%&gt;% gather(c(&#39;GillNet&#39;, &#39;Trawler&#39;), key = &quot;Gear.Type&quot;, value = &quot;intensity&quot;)%&gt;% ggplot(aes(intensity, rel.prop))+ geom_point()+ geom_smooth(method = &quot;lm&quot;)+ scale_y_log10()+ labs(x = &quot;Fishing intensity&quot;, y = &quot;Relative proportion of H.curtus&quot;)+ facet_wrap(~Gear.Type, scales = &quot;free_x&quot;) ## Error in eval(lhs, parent, parent): object &#39;fi_den&#39; not found "],
["overlap-between-fisheries-catch-and-sea-snake-diet.html", "7 Overlap between fisheries catch and sea snake diet 7.1 Sampling Adequacy 7.2 Catch weight 7.3 Diverisity of prey families found in fisheries catch 7.4 No. of Sea snake prey families found in fish catch and overlap 7.5 Sea snake prey species in fisheries catch", " 7 Overlap between fisheries catch and sea snake diet # importing catch data catch &lt;- read.csv(&quot;../Data/catch.csv&quot;) ## Error in file(file, &quot;rt&quot;): cannot open the connection # importing gut content data gutcontent &lt;- read.csv(&quot;../Data/Sea_snakes_gut_content_2018-19.csv&quot;) ## Error in file(file, &quot;rt&quot;): cannot open the connection # Standarising sea snake gut content data gutcontent = gutcontent%&gt;% filter(Snake.Species == &quot;Hydrophis schistosus&quot; | Snake.Species == &quot;Hydrophis curtus&quot;, Prey.Family != &quot;Unidentified&quot;, Prey.Family != &quot;&quot;)%&gt;% group_by(Snake.Species)%&gt;% mutate(n = n())%&gt;% group_by(Snake.Species, Prey.Family)%&gt;% summarise(Abundance = n(), n = last(n), Rel.prop = last(Abundance/n)) ## Error in eval(lhs, parent, parent): object &#39;gutcontent&#39; not found 7.1 Sampling Adequacy # calculating number trips and fishing effort catch%&gt;% group_by(Gear.Type, Sample)%&gt;% summarise(Haul.time = last(Haul.time), No.hauls = last(No.hauls))%&gt;% group_by(Gear.Type)%&gt;% summarise(N = length(unique(Sample)), Haul.Hours = sum(No.hauls*Haul.time, na.rm = T)/60) ## Error in eval(lhs, parent, parent): object &#39;catch&#39; not found 7.2 Catch weight # importing catch weight data tonnage &lt;- read.csv(&quot;../Data/catch tonnage.csv&quot;) ## Error in file(file, &quot;rt&quot;): cannot open the connection # transforming total catch weight to log shapiro.test(log(tonnage$Total.Catch..kg.)) ## Error in stopifnot(is.numeric(x)): object &#39;tonnage&#39; not found broom::tidy(t.test(log(Total.Catch..kg.) ~ Gear.Type, data = tonnage)) ## Error in eval(m$data, parent.frame()): object &#39;tonnage&#39; not found lsr::cohensD(log(Total.Catch..kg.) ~ Gear.Type, data = tonnage) ## Error in is(data, &quot;data.frame&quot;): object &#39;tonnage&#39; not found 7.3 Diverisity of prey families found in fisheries catch #Creating data martix catch_fam &lt;- catch%&gt;% filter(Family != &quot;&quot;)%&gt;% group_by(Gear.Type, Sample)%&gt;% mutate(Sample.Wt = sum(Weight.g, na.rm = T))%&gt;%#Total sampled biomass group_by(Gear.Type, Sample, Family)%&gt;% summarise(Biomass = sum(Weight.g, na.rm = T),#weight of each fish family in catch Prey = last(ifelse(Family%in%gutcontent$Prey.Family, &quot;Yes&quot;, &quot;No&quot;)), Sample.Wt = last(Sample.Wt))%&gt;% mutate(Rel.biomass = Biomass/Sample.Wt)#%&gt;%#relative propotion of fish family in sample ## Error in eval(lhs, parent, parent): object &#39;catch&#39; not found #group_by(Gear.Type, Family)%&gt;% #summarise(Avg.rel.biomass = sum(Rel.biomass)/n(), Prey = last(Prey)) #Richness catch%&gt;% filter(Family != &quot;&quot;)%&gt;% group_by(Gear.Type)%&gt;% summarise(Family.Richness = length(unique(Family))) ## Error in eval(lhs, parent, parent): object &#39;catch&#39; not found 7.4 No. of Sea snake prey families found in fish catch and overlap gc.hs &lt;- filter(gutcontent, Snake.Species == &quot;Hydrophis schistosus&quot;) ## Error in filter(gutcontent, Snake.Species == &quot;Hydrophis schistosus&quot;): object &#39;gutcontent&#39; not found gc.hc &lt;- filter(gutcontent, Snake.Species == &quot;Hydrophis curtus&quot;) ## Error in filter(gutcontent, Snake.Species == &quot;Hydrophis curtus&quot;): object &#39;gutcontent&#39; not found catch_fam = catch_fam%&gt;% mutate(HS = if_else(Family%in%gc.hs$Prey.Family, &quot;Yes&quot;, &quot;No&quot;), HC= if_else(Family%in%gc.hc$Prey.Family, &quot;Yes&quot;, &quot;No&quot;)) ## Error in eval(lhs, parent, parent): object &#39;catch_fam&#39; not found # number of prey families caught by each gear catch_fam%&gt;% gather(c(&quot;HC&quot;, &quot;HS&quot;), key = &quot;snake&quot;, value = &quot;Prey&quot;)%&gt;% filter(Prey == &quot;Yes&quot;)%&gt;% group_by(Gear.Type, snake)%&gt;% summarise(Nfam = length(unique(Family))) ## Error in eval(lhs, parent, parent): object &#39;catch_fam&#39; not found # prey of each species as relative proportion in fisheries catch catch_fam%&gt;% gather(c(&quot;HC&quot;, &quot;HS&quot;), key = snake, value = Prey)%&gt;% filter(Prey == &quot;Yes&quot;)%&gt;% group_by(Gear.Type, Sample, snake)%&gt;% summarise(N = length(unique(Family)), Biomass = sum(Biomass), Sample.Wt = last(Sample.Wt), rel.prop = Biomass/Sample.Wt)%&gt;% group_by(Gear.Type, snake)%&gt;% summarise(Mean.prop = mean(rel.prop)) ## Error in eval(lhs, parent, parent): object &#39;catch_fam&#39; not found # is the proportion of HC prey greater than that of HS in catch # do trawlers have a higher overlap with sea snakes than gillnets catch_fam%&gt;% gather(c(&quot;HC&quot;, &quot;HS&quot;), key = snake, value = Prey)%&gt;% filter(Prey == &quot;Yes&quot;)%&gt;% group_by(Gear.Type, Sample, snake)%&gt;% summarise(Biomass = sum(Biomass), Sample.Wt = last(Sample.Wt), rel.prop = Biomass/Sample.Wt)%&gt;% group_by(Gear.Type)%&gt;% nest()%&gt;% mutate(ttest = map(data, ~t.test(rel.prop ~ snake, data = .)), sumry = map(ttest, broom::tidy), d = map(data, ~lsr::cohensD(rel.prop ~ snake, data = .)))%&gt;% dplyr::select(sumry, d)%&gt;% unnest()%&gt;% dplyr::select(Gear.Type:p.value, d)%&gt;% rename(HC = estimate1, HS = estimate2) ## Error in eval(lhs, parent, parent): object &#39;catch_fam&#39; not found catch_fam%&gt;% gather(c(&quot;HC&quot;, &quot;HS&quot;), key = snake, value = Prey)%&gt;% filter(Prey == &quot;Yes&quot;)%&gt;% group_by(Gear.Type, Sample, snake)%&gt;% summarise(Biomass = sum(Biomass), Sample.Wt = last(Sample.Wt), rel.prop = Biomass/Sample.Wt)%&gt;% group_by(snake)%&gt;% nest()%&gt;% mutate(ttest = map(data, ~t.test(rel.prop ~ Gear.Type, data = .)), sumry = map(ttest, broom::tidy), d = map(data, ~lsr::cohensD(rel.prop ~ Gear.Type, data = .)))%&gt;% dplyr::select(sumry, d)%&gt;% unnest()%&gt;% dplyr::select(snake:p.value, d)%&gt;% rename(GN = estimate1, TR = estimate2) ## Error in eval(lhs, parent, parent): object &#39;catch_fam&#39; not found 7.5 Sea snake prey species in fisheries catch Species constituting &gt;10% of the catch on average are represented catch_fam%&gt;% gather(c(&quot;HC&quot;, &quot;HS&quot;), key = &quot;snake&quot;, value = &quot;Prey&quot;)%&gt;% filter(Prey == &quot;Yes&quot;)%&gt;% group_by(Gear.Type, Family)%&gt;% summarise(N = length(unique(Family)), p = mean(Rel.biomass, na.rm = T))%&gt;% ggplot(aes(reorder(Family, p), p))+ geom_col(width = 0.5)+ scale_fill_brewer(palette = &quot;Greys&quot;)+ labs(x = &quot;Fish Family&quot;, y = &quot;Average proportion in catch&quot;)+ scale_y_sqrt()+ theme(axis.text.x = element_text(angle = 60, hjust = 1, face = &quot;italic&quot;))+ facet_wrap(~Gear.Type, ncol = 1) ## Error in eval(lhs, parent, parent): object &#39;catch_fam&#39; not found ggsave(last_plot(), filename = &quot;../Figures and Tables/fig5.png&quot;, height = 8, width = 8) ## Error in grDevices::png(..., res = dpi, units = &quot;in&quot;): unable to start png() device "],
["does-isotopic-niche-of-sea-snakes-change-with-local-fishing-intensity.html", "8 Does isotopic niche of sea snakes change with local fishing intensity? 8.1 Sample size 8.2 Variation Carbon isotope ratio with fishing intensity 8.3 Modeling isotope ratios with fishing intensity 8.4 Difference in niche width between sea snakes", " 8 Does isotopic niche of sea snakes change with local fishing intensity? As it is infeasible to to find sites with little to no fishing pressure on mainland India. The ultimate objective of this project remains unfulfilled it is nigh impossible to conduct a study with controls and test sites with varying levels of fishing pressure. How do you test the niche shift hypotheses with out spatial replicates? While the control - test study design failed, fishing effort data was collected from multiple vessels (Gillnet and Trawlers) landing at the Malvan harbour over the period of 1.5 years along side diet, abundance (snakes and prey), and isotopic data. So we ask the following questions: Is there a corellation between fishing intensity and isotopic ratios? Do niche metrics (width, overlap) vary with fishing pressure (high, medium and low preiods during the year)? What temporal resolution should be used for the analysis? Day, week, month or season. Which is appropriate and why? Depending on the tissue being analysed. Scales - month, Plasma - week What are the existing data and sampling structures and what can be improved? # determining clusters for fishing intensity fi_den &lt;- read.csv(&quot;../data/cell_fish_snake.csv&quot;) ## Error in file(file, &quot;rt&quot;): cannot open the connection fi_den = fi_den%&gt;% mutate(id = 1:nrow(fi_den)) ## Error in eval(lhs, parent, parent): object &#39;fi_den&#39; not found fi = fi_den%&gt;% dplyr::select(id, x, y, GillNet, Trawler) ## Error in eval(lhs, parent, parent): object &#39;fi_den&#39; not found dist_fi &lt;- dist(fi) ## Error in as.matrix(x): object &#39;fi&#39; not found clust_fi &lt;- hclust(dist_fi) ## Error in hclust(dist_fi): object &#39;dist_fi&#39; not found fi_class &lt;- cutree(clust_fi, 3) ## Error in nrow(tree$merge): object &#39;clust_fi&#39; not found fi &lt;- fi%&gt;% mutate(class = as.factor(ifelse(fi_class == 2, &quot;High&quot;, &quot;Low&quot;))) ## Error in eval(lhs, parent, parent): object &#39;fi&#39; not found ggplot(fi, aes(x, y, fill = class))+ geom_tile() ## Error in ggplot(fi, aes(x, y, fill = class)): object &#39;fi&#39; not found #Stable isotope data sia = read.csv(&quot;../Data/Stable Isotope Data_CEAS_241119.csv&quot;) #joining sia data to snake data sia_snakes = sia%&gt;% filter(Tissue.type != &quot;Gut Content&quot;)%&gt;% left_join(snakes, &#39;Field.Code&#39;)%&gt;% mutate(Lab = &quot;CEAS&quot;)%&gt;% rename(Delta.Carbon = d13C..vpdb. , Delta.Nitrogen = d15N..N2.air.)%&gt;% dplyr::select(Date, Field.Code, Species, Snout.to.Vent..cm., Sex, Gravid, Class, Gear.Type, Fishing.Location, Depth.Caught..m., Plasma.Color, Delta.Carbon, Delta.Nitrogen, Lab, Tissue.type, Month, Year) sia_li &lt;- sia_fi%&gt;% group_by(Field.Code, Species, Tissue.type, Delta.Carbon, Delta.Nitrogen)%&gt;% nest()%&gt;% mutate(cell = map(data, cell.ext), celldf = map(cell, as.data.frame))%&gt;% dplyr::select(celldf)%&gt;% unnest()%&gt;% inner_join(fi, by = c(&quot;x&quot;, &quot;y&quot;)) write.csv(sia_li, &quot;./Data/SIA_fishing intensity.csv&quot;) 8.1 Sample size sia_li &lt;- read.csv(&quot;../Data/SIA_fishing intensity.csv&quot;) ## Error in file(file, &quot;rt&quot;): cannot open the connection sia_li &lt;- sia_li%&gt;% inner_join(fi, c(&quot;x&quot;,&quot;y&quot;)) ## Error in eval(lhs, parent, parent): object &#39;sia_li&#39; not found table(sia_li$Species, sia_li$Tissue.type) ## Error in table(sia_li$Species, sia_li$Tissue.type): object &#39;sia_li&#39; not found 8.2 Variation Carbon isotope ratio with fishing intensity sia_li%&gt;% filter(Tissue.type == &quot;Plasma&quot;)%&gt;% gather(key = Isotope, c(Delta.Carbon, Delta.Nitrogen), value = ratio)%&gt;% ggplot(aes(intensity, ratio))+ geom_point(size = 3)+ geom_smooth(method = lm)+ labs(x = &quot;Fishing intensity&quot;)+ theme(legend.text = element_text(face = &quot;italic&quot;))+ facet_wrap(~Isotope, scale = &quot;free_y&quot;) ## Error in eval(lhs, parent, parent): object &#39;sia_li&#39; not found 8.3 Modeling isotope ratios with fishing intensity 8.3.1 Continous model sia_li%&gt;% filter(Tissue.type == &quot;Plasma&quot;)%&gt;% gather(key = Isotope, c(Delta.Carbon, Delta.Nitrogen), value = ratio)%&gt;% group_by(Species, Isotope)%&gt;% nest()%&gt;% mutate( mod1 = map(data, ~lm(ratio ~ intensity, data = .)), summ1 = map(mod1, tidy), anova = map(mod1, car::Anova), r2 = map(mod1, broom::glance) )%&gt;% dplyr::select(summ1, r2)%&gt;% unnest()%&gt;% dplyr::select(Species:p.value, adj.r.squared) ## Error in eval(lhs, parent, parent): object &#39;sia_li&#39; not found Samples sizes for H. curtus are low, however, fishing intensity seems to have a significant depletion effect on plasma isotope ratios in H. schistosus. 8.4 Difference in niche width between sea snakes library(SIBER) #Creating siber data siber_fi = sia_li%&gt;% filter(Tissue.type == &quot;Plasma&quot;)%&gt;% dplyr::select(Delta.Carbon, Delta.Nitrogen, Species, class)%&gt;% rename(iso1 = Delta.Carbon, iso2 = Delta.Nitrogen, group = class, community = Species)%&gt;% filter(!is.na(group), !is.na(iso1), !is.na(iso2), community == &quot;Hydrophis schistosus&quot; | community == &quot;Hydrophis curtus&quot;)%&gt;% ungroup()%&gt;% dplyr::select(iso1, iso2, group, community)%&gt;% droplevels() ## Error in eval(lhs, parent, parent): object &#39;sia_li&#39; not found siber.snakes.fi = createSiberObject(as.data.frame(siber_fi)) ## Error in as.data.frame(siber_fi): object &#39;siber_fi&#39; not found 8.4.1 Maximum likelihood estimate of SEA SEA.ML_snakes.fi &lt;- groupMetricsML(siber.snakes.fi) #maximum likelihood estimates ## Error in groupMetricsML(siber.snakes.fi): object &#39;siber.snakes.fi&#39; not found data.frame(t(SEA.ML_snakes.fi)) ## Error in t(SEA.ML_snakes.fi): object &#39;SEA.ML_snakes.fi&#39; not found As maximum likelihood can only porivde point estimates of SEA, a bayesian model was used to provide more robust comparison of niche width. 8.4.2 Bayesian estimate of SEA # options for running jags parms &lt;- list() parms$n.iter &lt;- 2 * 10^4 # number of iterations to run the model for parms$n.burnin &lt;- 1 * 10^3 # discard the first set of values parms$n.thin &lt;- 10 # thin the posterior by this many parms$n.chains &lt;- 2 # run this many chains # define the priors priors &lt;- list() priors$R &lt;- 1 * diag(2) priors$k &lt;- 2 priors$tau.mu &lt;- 1.0E-3 snakes.fi.post &lt;- siberMVN(siber.snakes.fi, parms, priors)#fitting multivariate normal model and getting posteriors ## Error in siberMVN(siber.snakes.fi, parms, priors): object &#39;siber.snakes.fi&#39; not found SEA.B_snakes.fi &lt;- siberEllipses(snakes.fi.post)#estimating standard ellipse area from posteriors ## Error in nrow(corrected.posteriors[[1]]): object &#39;snakes.fi.post&#39; not found means.B_snakes.fi &lt;- extractPosteriorMeans(siber.snakes.fi, snakes.fi.post)#mean isotope values ## Error in paste(siber$original.data[, &quot;community&quot;], siber$original.data[, : object &#39;siber.snakes.fi&#39; not found ccc &lt;- names(snakes.fi.post) ## Error in eval(expr, envir, enclos): object &#39;snakes.fi.post&#39; not found colnames(SEA.B_snakes.fi) &lt;- ccc ## Error in eval(expr, envir, enclos): object &#39;ccc&#39; not found SEA.B_snakes.fi.df = data.frame(SEA.B_snakes.fi, check.names = F)%&gt;% rowid_to_column(var = &quot;run&quot;)%&gt;% gather(Species.class, SEA.B, -run)%&gt;% separate(Species.class, c(&quot;Species&quot;,&quot;FI.Class&quot;), sep = &quot;([\\\\.\\\\?\\\\:])&quot;) ## Error in data.frame(SEA.B_snakes.fi, check.names = F): object &#39;SEA.B_snakes.fi&#39; not found #Summarising SEA estimates SEA.B_snakes.fi.df%&gt;% group_by(Species, FI.Class)%&gt;% summarise(SEA.mean = mean(SEA.B), SEA.sd = sd(SEA.B), SEA.se = sd(SEA.B)/sqrt(n())) ## Error in eval(lhs, parent, parent): object &#39;SEA.B_snakes.fi.df&#39; not found 8.4.3 Testing difference in species niche area by tissue type SEA.B_snakes.fi.df%&gt;% spread(key = FI.Class, value = SEA.B)%&gt;% group_by(Species)%&gt;% summarise(p = sum(`High` &gt; `Low`)/n()) ## Error in eval(lhs, parent, parent): object &#39;SEA.B_snakes.fi.df&#39; not found SEA.B_snakes.fi.df%&gt;% ggplot(aes(Species, SEA.B, fill = FI.Class))+ geom_boxplot(alpha = 0.3, width = 0.25)+ scale_y_continuous(limits = c(0,20), name = &quot;Standard Ellispes Area&quot;)+ scale_fill_discrete(name = &quot;Fishing Intensity&quot;)+ theme(axis.text.x = element_text(face = &quot;italic&quot;)) ## Error in eval(lhs, parent, parent): object &#39;SEA.B_snakes.fi.df&#39; not found ggsave(last_plot(), filename = &quot;../Figures and Tables/fig6.png&quot;, height = 4.5, width = 8, device = &quot;png&quot;) ## Error in grDevices::png(..., res = dpi, units = &quot;in&quot;): unable to start png() device "]
]
